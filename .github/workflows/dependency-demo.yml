name: Dependency Patterns Demo

# Only runs when manually triggered
on:
  workflow_dispatch:
    inputs:
      pattern:
        description: 'Which pattern to demonstrate?'
        type: choice
        options:
        - sequential
        - parallel
        default: 'sequential'

jobs:
  # Setup job
  setup:
    name: 🏁 Setup
    runs-on: ubuntu-latest
    outputs:
      pattern: ${{ github.event.inputs.pattern }}
      timestamp: ${{ steps.time.outputs.timestamp }}
    
    steps:
    - name: Generate Timestamp
      id: time
      run: |
        TIMESTAMP=$(date +%s)
        echo "timestamp=${TIMESTAMP}" >> $GITHUB_OUTPUT
        echo "Setup completed at: ${TIMESTAMP}"

  # Parallel jobs (all depend on setup, run at same time)
  job-a:
    name: 🔵 Job A
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Do Work A
      run: |
        echo "Job A is working..."
        sleep 3
        echo "Job A finished!"

  job-b:
    name: 🟢 Job B
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Do Work B
      run: |
        echo "Job B is working..."
        sleep 5
        echo "Job B finished!"

  job-c:
    name: 🟡 Job C
    runs-on: ubuntu-latest
    needs: setup
    steps:
    - name: Do Work C
      run: |
        echo "Job C is working..."
        sleep 2
        echo "Job C finished!"

  # Sequential job (waits for all parallel jobs)
  sequential-1:
    name: 📝 Sequential Step 1
    runs-on: ubuntu-latest
    needs: [job-a, job-b, job-c]  # Waits for ALL parallel jobs
    if: github.event.inputs.pattern == 'sequential'
    outputs:
      result: ${{ steps.work.outputs.result }}
    
    steps:
    - name: Sequential Work 1
      id: work
      run: |
        echo "Sequential step 1 starting..."
        RESULT="step1-$(date +%s)"
        echo "result=${RESULT}" >> $GITHUB_OUTPUT
        echo "Sequential step 1 result: ${RESULT}"

  sequential-2:
    name: 📋 Sequential Step 2
    runs-on: ubuntu-latest
    needs: sequential-1  # Waits for sequential-1
    if: github.event.inputs.pattern == 'sequential'
    
    steps:
    - name: Sequential Work 2
      run: |
        echo "Sequential step 2 starting..."
        echo "Previous result: ${{ needs.sequential-1.outputs.result }}"
        echo "Sequential step 2 completed!"

  # Summary (always runs)
  summary:
    name: 📊 Summary
    runs-on: ubuntu-latest
    needs: [setup, job-a, job-b, job-c, sequential-2]
    if: always()
    
    steps:
    - name: Show Summary
      run: |
        echo "🎯 Dependency Demo Summary"
        echo "========================="
        echo "Pattern: ${{ needs.setup.outputs.pattern }}"
        echo "Timestamp: ${{ needs.setup.outputs.timestamp }}"
        echo ""
        echo "Job Results:"
        echo "- Setup: ${{ needs.setup.result }}"
        echo "- Job A: ${{ needs.job-a.result }}"
        echo "- Job B: ${{ needs.job-b.result }}"
        echo "- Job C: ${{ needs.job-c.result }}"
        echo "- Sequential: ${{ needs.sequential-2.result }}"
        echo ""
        echo "✅ Demo completed!"